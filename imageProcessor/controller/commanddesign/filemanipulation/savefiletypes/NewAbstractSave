package imageprocessor.controller.commanddesign.filemanipulation.savefiletypes;

import imageprocessor.controller.commanddesign.filemanipulation.fileconversion.FileImageConversion;
import imageprocessor.model.IImage;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

/***
 * Abstract save class that saves from an IImage.
 */
public abstract class NewAbstractSave implements SaveFile {
    private String file;

    protected NewAbstractSave(String file) {
        this.file = file;
    }

    @Override
    public void go(IImage img) {
        FileImageConversion c = getConverter();
        BufferedImage image = c.iImageToBufferedImage(img);
        File f = new File(file);
        FileOutputStream out;

        try {
            out = new FileOutputStream(f);
        } catch (FileNotFoundException e) {
            throw new IllegalStateException("File should, but doesn't exist");
        }

        try {
            ImageIO.write(image, file.substring(file.length() - 3), out);
        } catch (IOException e) {
            throw new IllegalStateException("I/O Exception occurred");
        }
    }

    protected abstract FileImageConversion getConverter();
}
