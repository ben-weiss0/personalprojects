package imageprocessor.controller.commanddesign.transformations;

import java.util.Scanner;

import imageprocessor.model.ImageProcessingModel;
import imageprocessor.model.operations.Exposure;

/**
 * Function object that is called when the user wants to generate a new brightened image in our
 * model from an existing image in our model.
 */
public class BrightenCommand extends AbstractExposureCommand {
  /**
   * Constructor.
   * @param sc scans the readable to find the amount we want to brighten, which image reference we'd
   *           like to brighten, and the reference to the new brightened image.
   */
  public BrightenCommand(Scanner sc) throws IllegalStateException {
    super(sc);
  }

  /**
   * Brightens an existing image in our model and saves it with a new reference.
   * @param model our storage system of all images. Each object will be able to access different
   *              images inside the model and use them to manipulate the model.
   */
  @Override
  public void apply(ImageProcessingModel model) {
    parseScanner();
    model.transform(new Exposure(scale), src, dest);
  }
}
